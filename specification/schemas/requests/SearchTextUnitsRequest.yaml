type: object
description: |
  The request body for the searchTextUnits operation.

  This endpoint performs **semantic and lexical discovery** within a defined scope. For deterministic fetching of TextUnits by specific Version IDs, use `getBatchTextUnits` instead.

  **Scoping:**
  - Use `item_ids` and/or `theme_ids` to define the structural or thematic scope
  - Use `timestamp` to constrain temporally (defaults to "now" if omitted)
  - If neither `item_ids` nor `theme_ids` is provided, the search applies globally across all accessible data

  **Search Query:**
  - `content_query`: A unified JSON structure for hybrid search combining semantic and lexical queries with advanced filtering
  - Required for effective discovery

  **Optional Filters:**
  - `item_type_ids`: Filter results to only TextUnits from Items of specified types
  - `metadata_filter`: Apply additional metadata-based filtering
properties:
  item_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: |
      Optional. A list of Item IDs to define the structural scope for the search.
  item_type_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: |
      Optional. Filter search results to only TextUnits from Items of the specified types (references to ItemType entities).
      More efficient than using `metadata_filter` for type-based filtering.
    example: ["item-type:article", "item-type:paragraph"]
  theme_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: |
      Optional. A list of Theme IDs to define the thematic scope for the search.
  metadata_filter:
    $ref: '../common/MetadataFilter.yaml'
  timestamp:
    type: string
    format: date-time
    description: |
      Optional. A UTC date-time to constrain the search temporally. Defaults to 'now' if omitted.
  content_query:
    $ref: '../common/ContentQuery.yaml'
  language:
    type: string
    description: "The IETF BCP 47 language code for the content."
    example: "pt-BR"
  aspects:
    type: array
    items:
      type: string
    default: ["canonical"]
    description: "A list of textual aspects to search within (e.g., 'canonical', 'summary')."
  top_k:
    type: integer
    format: int32
    default: 10
    minimum: 1
    description: "The maximum number of results to return."
  datasources:
    $ref: '../common/DatasourcesSchema.yaml'
    description: "Optional. Scopes the search to a specific list of granted datasources."
