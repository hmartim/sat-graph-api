type: object
description: |
  Specifies the scope and filters for enumerating Item objects.

  **Filter Logic:**
  - If both `categories` and `item_type_ids` are provided, items must satisfy BOTH conditions (AND logic).
  - Filters are applied after scope resolution (item_ids/theme_ids/depth).
properties:
  item_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: "Optional. A list of 'Item' IDs to define a structural scope. The function will return these items and/or their descendants."
  theme_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: "Optional. A list of 'Theme' IDs to define a thematic scope. The function will return all member items of these themes."
  depth:
    type: integer
    description: >
      Controls traversal depth for 'item_ids' scopes. If `depth=1`, only direct children are returned. If omitted or negative, all descendants are returned recursively. This parameter is ignored for 'theme_ids' scopes.
    default: -1
  categories:
    type: array
    items:
      type: string
      enum:
        - "Work"
        - "Work Component"
        - "Term"
        - "Concept"
        - "Named Entity"
    description: >
      Optional. Filter results to only items with the specified categories.
      When combined with `item_type_ids`, both filters must be satisfied (AND logic).
    example: ["Work Component"]
  item_type_ids:
    type: array
    items:
      $ref: '../core/ID.yaml'
    description: >
      Optional. Filter results to only items of the specified types (references to ItemType entities).
      When combined with `categories`, both filters must be satisfied (AND logic).
    example: ["item-type:article", "item-type:paragraph"]
  datasources:
    $ref: '../common/DatasourcesSchema.yaml'
