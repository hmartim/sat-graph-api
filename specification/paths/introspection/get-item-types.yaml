get:
  tags:
    - "Introspection & Metadata Actions"
  summary: "Gets the list of all item types in the system."
  operationId: "getItemTypes"
  description: |
    Returns a list of all item types (e.g., `Constitution`, `Statute`, `Article`) available in the graph.

    ### Discussion
    This action provides the canonical list of `type` values that Items can have. It allows a client application to dynamically build filtering interfaces (e.g., dropdowns, checkboxes) without hardcoding domain-specific values.

    The optional `category` parameter enables filtering types by their architectural category (e.g., only types for "Work" items), which is particularly useful for building cascading filters in user interfaces where users first select a category and then see relevant types.

    **Use Cases:**
    - Populate filter dropdowns in search interfaces
    - Validate user input before queries
    - Build faceted navigation systems
    - Generate dynamic forms for item creation/editing

  security:
    - ApiKeyAuth: []

  parameters:
    - name: category
      in: query
      required: false
      description: |
        Optional. Filter types to only those associated with a specific Item category.

        Valid values: `Work`, `Work Component`, `Term`, `Concept`, `Named Entity`.

        When omitted, returns all types across all categories.
      schema:
        type: string
        enum:
          - "Work"
          - "Work Component"
          - "Term"
          - "Concept"
          - "Named Entity"
      example: "Work"

  responses:
    '200':
      description: "A list of item type strings, optionally filtered by category."
      content:
        application/json:
          schema:
            type: array
            items:
              type: string
              minLength: 1
              example: "Constitution"
            example: ["Constitution", "Statute", "Law", "Decree"]
    '400':
      $ref: '../../openapi.yaml#/components/responses/BadRequest'
    '401':
      $ref: '../../openapi.yaml#/components/responses/Unauthorized'
    '403':
      $ref: '../../openapi.yaml#/components/responses/Forbidden'
