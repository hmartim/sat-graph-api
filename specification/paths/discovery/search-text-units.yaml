post:
  tags:
    - "Discovery and Search Actions"
  summary: "Performs a hybrid search for TextUnits."
  operationId: "searchTextUnits"
  description: |
    Performs a hybrid search to discover `TextUnit` nodes by combining semantic, lexical, and structured criteria, returning a ranked list of the most relevant results. This is the primary, optimized entry point for all standard RAG queries.

    ### Scoping
    Define the search scope using:
    - `item_ids` and/or `theme_ids` for structural or thematic boundaries
    - `timestamp` for temporal constraints (defaults to 'now')
    - Omit all to search globally across accessible data

    ### Deterministic Retrieval
    **Important:** If you already have specific Version IDs and want a deterministic fetch (not a ranked search), use `getBatchTextUnits` instead. That endpoint is optimized for bulk retrieval without search overhead.

    ### Filtering and Aspects
    Additional optional filters like `item_type_ids` can further narrow results to specific structural components, enabling use cases such as searching only within articles or specific item hierarchies.

    The `aspects` parameter enables a truly holistic search, allowing a query to match a `Work`'s 'textual_metadata' just as easily as a `Version`'s 'canonical' text.

  security:
    - ApiKeyAuth: []

  requestBody:
    description: "The search criteria."
    required: true
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/SearchTextUnitsRequest'

  responses:
    '200':
      description: "Search executed successfully. Returns a ranked list of TextUnits."
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/SearchResultUnit'
    '400':
      $ref: '#/components/responses/BadRequest'
    '401':
      $ref: '#/components/responses/Unauthorized'
    '403':
      $ref: '#/components/responses/Forbidden'
